[{"_id": "bxKN92MKi7PnFEoEZ", "postedAt": "2023-03-18T05:54:41.321Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>This might be an especially good time to enter the field. Instead of having to compete with more experienced SWEs in writing code the old fashioned way, you can be on a nearly level playing field with incorporating LLMs into your workflow. You\u2019ll still need to learn a traditional language, at least for now, but you will be able to learn more quickly with the assistance of an LLM tutor. As the field increasingly adapts to a whole new way to write code, you can learn along with everybody else.</p>\n", "parentCommentId": null, "user": {"username": "AllAmericanBreakfast"}}, {"_id": "nfDFhQzJQZKfLejFa", "postedAt": "2023-03-18T06:13:21.452Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>When it comes to LLMs, I often compare the complexity of writing a world-class software system to the difficulty of writing a world-class novel. Any fifth grader can string together a five-paragraph essay. But it\u2019s a long way from that to writing an astute portrayal of modern society with compelling prose and gripping characters, like Balzac did.</p>\n<p>When you hear professional software engineers say they\u2019re not worried about AI, I think this is a large part of what\u2019s going on. Most production code requires you to understand the world around you \u2014 you need to understand your customers, the existing technical constraints and your operational budget (how often is the system allowed to crash? What\u2019s the 95th percentile allowed latency? What features can we trade off to reach this?). You often need to understand the viewpoints of your coworkers and/or managers and be able to argue with them when they\u2019re wrong. You need to understand <em>which</em> coworkers or customers to talk to and which ones to ignore (not something I see in the skill set of any LLM so far). In most companies, the more senior a software engineer is, the more this becomes part of their job (instead of day-to-day coding).</p>\n<p>That said, I think 80k hours correctly notes that software engineering is a great early-stage career and a mediocre mid-to-late stage career. Nowhere else can you find a cushy, well-defined and fun job that easily pays $100-500k a year. But I think that ends up cutting against you 5-10 years in \u2014 many software engineers can get so far off of just coding and being a nerd that they never learn how to solve business problems (and companies are often built around the expectation that software engineers don\u2019t want to learn about the business). That keeps them from moving into more impactful roles. It\u2019s also not a job that lends itself to networking, which probably also affects long-term career prospects.</p>\n<p>Since you\u2019re a former business owner, it\u2019s possible this won\u2019t be a problem for you. In that case, working at a tech company is one of the best ways to learn how to code and how to design software systems, and it\u2019s probably a great move for you. I\u2019d just encourage you to keep in mind that coding, while fun, is most impactful as a means to an end than as an end in itself.</p>\n", "parentCommentId": null, "user": {"username": "ephmecx"}}, {"_id": "HDYhuh4RFStdcoQhh", "postedAt": "2023-03-19T01:39:45.007Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>Very interesting point. I hadn\u2019t seen this as super plausible given how AI is starting to be used in copywriting/marketing: 1) Copy editors can now give prompts to LLMs and refine from there. 2) Non-writing workers e.g. marketing coordinators, account managers, etc. can use LLMs to create \u201cgood enough\u201d pieces for landing pages, social captions, SEO, etc. This kind of AI integration seems to be eliminating the need for copywriters, content writers, brand writers, etc. But &nbsp;I should acknowledge that a lot of my worries are &nbsp;based on anecdotal evidence. I was the only full-time writer at my previous agency and, while I left on my own accord, it looks like they're going to experiment without the position. I think their plan is to get non-writing account managers proficient with an LLM and contract with a lower level writer for client edits.</p><p>According to BLS, <a href=\"https://www.bls.gov/ooh/media-and-communication/writers-and-authors.htm\">writers and authors</a> (very broad category) are expected to grow at 4% over the next 10 years, while <a href=\"https://www.bls.gov/ooh/media-and-communication/editors.htm\">editor roles</a> are expected to decline by 5%. I do imagine that &nbsp;copy directors, &nbsp;technical writers, and script writers (various levels) will be among those spared near future replacement, but these are very specific niches, and the ability for LLMs to craft slogans, taglines, and scripts is getting quite impressive...</p><p>Now, I understand content creation is quite different from software engineering, and perhaps the former positions and tasks don't map well onto the latter. To your point, maybe the transformation in software is more analogous to physical engineering, where a newer professional who knows SOLIDWORKS, Fusion 360, FDM/3D, etc. is going to add value where someone more experienced who only works with legacy programs and traditional manufacturing can't. Does that comparison feel appropriate?</p>", "parentCommentId": "bxKN92MKi7PnFEoEZ", "user": {"username": "justaperson"}}, {"_id": "CkAHyMLeRAdJqss97", "postedAt": "2023-03-19T01:51:42.350Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>When it comes to refining AI generated code, do you imagine this being done within organizations by the same amount of programmers or that LLMs could be managed by fewer senior (or even lower) level engineers? This question is inspired by my observations in marketing, where the stock of full-time writers appears to be going down. I totally get that LLMs can\u2019t create their own prompts, debug every line of code, or approve products, but do you think they\u2019ll start allowing orgs to complete product development cycles with less engineers?</p><p>Great point that coding isn\u2019t an end in itself. In addition to seeming fun/interesting, I'm looking to learn this skill for greater domain range, technical building ability, and professional autonomy. Knowing how to code could eventually help me launch a startup or support an EA-related org. And yeah, earning to give while I ramp makes this &nbsp;path even more attractive. Many great points and thanks for the encouragement!</p>", "parentCommentId": "nfDFhQzJQZKfLejFa", "user": {"username": "justaperson"}}, {"_id": "gy9TKM8sqqFFhLyiK", "postedAt": "2023-03-19T03:25:43.523Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>If AI + a nontechnical person familiar with business needs can replace me in coding, I expect something resembling a singularity within 5 years.</p>\n<p>I think that software engineering is a great career if you have an aptitude for it. It's also way easier to tell if you are good at it relative to most other careers (ie, Leetcode, Hackerrank, and other question repositories can help you understand your relative performance).</p>\n<p>So my answer is that either AI can't automate software engineers for a while, or they'll automate every career quite soon after software engineering. Maybe 30% of my job is automating other people's.  As a result, software engineering is a pretty good bet as a career.</p>\n<p>I'd be curious to hear from folks who can imagine worlds where software engineering is nearly fully automated, and we don't automate all jobs that decade.</p>\n", "parentCommentId": null, "user": {"username": "dan.pandori"}}, {"_id": "nAPmhDJZnAwpCK9wC", "postedAt": "2023-03-19T04:50:14.760Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>I've used ChatGPT for writing landing pages for my own websites, and as you say, it does a \"good enough\" job. It's the linguistic equivalent of a house decorated in knick knacks from Target. For whatever reason, we have had a cultural expectation that websites have to have this material in order to look respectable, but it's not business-critical beyond that.</p><p>By contrast, software remains business-critical. One of the key points that's being made again and again is that many business applications require extremely high levels of reliability. Traditional software and hardware engineering can accomplish that. For now, at least, large language models cannot, unless they are imitating existing high-reliability software solutions.&nbsp;</p><p>A large language model can provide me with reliable working code for an existing sorting algorithm, but when applications become large, dynamic, and integrated with the real world, it won't be possible to built a whole application off a short, simple prompt. Instead, the work is going to be about using both human and AI-generated code to put together these applications more efficiently, debug them, improve the features, and so on.</p><p>This is one reason why I think that LLMs are unlikely to replace software engineers, even though they are replacing copy editors, and even though they can write code: SWEs create business-critical high-reliability products, while copy editors create non-critical low-reliability products, which LLMs are eminently suitable for.</p>", "parentCommentId": "HDYhuh4RFStdcoQhh", "user": {"username": "AllAmericanBreakfast"}}, {"_id": "ytea7aHF5GzBasT6t", "postedAt": "2023-03-19T20:52:25.142Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>I mean, it's a better path than copywriting. Is that the other choice? Yeah software engineering is not a bad choice.</p>\n", "parentCommentId": null, "user": {"username": "Max Pietsch"}}, {"_id": "zQdcqqyoq2DksPEze", "postedAt": "2023-03-19T22:35:04.147Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>I'd say marketing is business-critical, and the difference between phone-it-in, good, great, and stellar content is important to bottom lines (depending on industry/product/service). That said, if the general point is that grammar issues on a site will have a lesser negative effect than buggy code that crashes that site, I agree. I'd also agree that unless you're a marketing or content agency, marketing and content may be part of your business but they're not the core of it. In contrast, almost every business in every industry runs on software today...</p><p>Still, I don't know how long things like scale, complexity, and strategy will be meaningful hurdles for LLMs and other AI technology (nobody does), but it <i>feels</i> like we're accelerating toward an end point. Regardless, software engineering seems like a good aptitude to add to the toolbox, and it's good to hear that I may not be too late to the game.</p>", "parentCommentId": "nAPmhDJZnAwpCK9wC", "user": {"username": "justaperson"}}, {"_id": "sppifem5pzbxcAuiJ", "postedAt": "2023-03-19T22:40:44.781Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>Thanks for that perspective. Given that I don't have experience in the programming space, I couldn't project a timeline between fully automated software production and AGI -- but your estimate puts something on the map for me. It is disconcerting though, as there are many different assumptions and perspectives about AGI, &nbsp;and a lot of uncertainty. But I also understand that certainty isn't something I should expect on any topic -- let alone this one . Moreover, career inaction isn't an option I can afford, so I'll likely be barreling down the software dev path very soon.</p>", "parentCommentId": "gy9TKM8sqqFFhLyiK", "user": {"username": "justaperson"}}, {"_id": "TbNqq5ooahehZ6t5g", "postedAt": "2023-03-19T22:58:05.236Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>No, I've already made the decision to leave copywriting (unless an opportunity to have an incredible impact came my way).</p><p>Software engineering and data science were the two paths I was considering but engineering won out 1) As an end-to-end (idea to product) creation tool, and 2) Iit doesn't require me to first become proficient in probability/statistics . The latter is something I eventually hope to do but, financially, I can't &nbsp;afford to ramp up in math, then data science, then find a job. And while it's estimated that data science roles will grow at a faster rate than jobs in software engineering, there are far less overall spots available in data science . Being at the midpoint of my career, my ability to make a meaningful contribution somewhere as a software developer seems more likely than as a data scientist. Lastly, I'd assume data science would be the type of skill that AI will replace before software engineering (but that's a huge guess).&nbsp;</p>", "parentCommentId": "ytea7aHF5GzBasT6t", "user": {"username": "justaperson"}}, {"_id": "RGa9GgKGgAxLGJuWi", "postedAt": "2023-03-19T23:20:44.597Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>See also <a href=\"https://www.lesswrong.com/posts/pip5c3SvHDB2XeywK/when-will-computer-programming-become-an-unskilled-job-if\">this LW question</a> posted earlier this week, and the discussion there.</p><span><span class=\"mjpage mjpage__block\"></span></span><span><span class=\"mjpage mjpage__block\"></span></span>", "parentCommentId": null, "user": {"username": "Erich_Grunewald"}}, {"_id": "bXCSi44m9hiAkbQSo", "postedAt": "2023-03-20T00:28:32.502Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>Thanks for the referral. Interesting post -- even if much of the technical-speak is lost on me. What I gathered is that nobody really knows if/when software engineering will become an unskilled job (no surprise) but, a) many are confident that it won't be anytime soon (at least, for the discipline as a whole), and b) junior developers are the ones that LLMs are likely to replace (est. 1-3 yrs.).</p><p>While much of the thread's early sentiments echo replies here, there's a divergence concerning newer engineers as the conversation continues. It's these bearish predictions that worry me. I don't need to make six figures, but I can't invest time (6-12 mo.) and money (courses, bootcamp, etc.) in a career path where newbie \"escape velocity\" is unlikely. More to think about...</p>", "parentCommentId": "RGa9GgKGgAxLGJuWi", "user": {"username": "justaperson"}}, {"_id": "mKEYkdptDbp6CcgQ6", "postedAt": "2023-03-20T01:46:23.018Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>Ah, gotcha. That plan makes sense then.</p>\n", "parentCommentId": "TbNqq5ooahehZ6t5g", "user": {"username": "Max Pietsch"}}, {"_id": "xF6JpFZQLSBQhJeft", "postedAt": "2024-03-25T19:37:14.284Z", "postId": "FgHa7FyiPyvBmMvS7", "htmlBody": "<p>I am currently contemplating a similar switch to software engineering or data science. Your post and the comments here are helpful in getting some perspective, as I have been asking myself similar questions. Since it has been a year now, may I ask how has your plan gone so far? How did you go about upskilling in software engineering and did you already start the job seeking process? If you don't feel like publicly stating these things, also feel free to DM me.</p>", "parentCommentId": null, "user": {"username": "Ali Naqvi"}}]